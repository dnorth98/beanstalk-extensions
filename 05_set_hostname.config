files: 
   "/usr/local/PRODUCT-tools/set-hostname.sh":
     mode: "00555"
     owner: root
     group: root
     encoding: plain
     content: |
       #!/bin/bash
       
       logMsg()
       {
          PROGNAME=set-hostname
          PID=$$
          logger -t ${PROGNAME}[$PID] $1
          echo $1
       }
       
       DOMAINCOMPONENT="$1"
       if [ "$DOMAINCOMPONENT" = "" ]; then
          logMsg "ERROR - No domain component supplied"
          exit 1
       fi
       
       BEANSTALKENV=`{ "Ref" : "AWSEBEnvironmentName" }`
       
       RETVAL=0
       HOSTSFILE=/etc/hosts
       HOSTSBAK=/etc/hosts.bak
       NETWORK=/etc/sysconfig/network
       NETWORKBAK=/etc/sysconfig/network.bak
       RESOLVCONF=/etc/resolv.conf
       RESOLVCONFBAK=/etc/resolv.conf.bak
       
       # Because the DHCP client can reset the resolv.conf file, we'll set it as
       # non-writable (http://www.cyberciti.biz/faq/dhclient-etcresolvconf-hooks/)
       
       # First, make sure we can write the resolv.conf file
       logMsg "Unprotecting the $RESOLVCONF file"
       /usr/bin/chattr -i $RESOLVCONF
       
       if [ "$BEANSTALKENV" = "" ]; then
          BEANSTALKENV=NBT
       fi
       
       EXTERNALIP=`wget -q -O - http://169.254.169.254/latest/meta-data/public-ipv4`
       INSTANCEID=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-id`
       MYHOSTNAME=${BEANSTALKENV}-${INSTANCEID}
       MYFQDN=${MYHOSTNAME}.${DOMAINCOMPONENT}
       
       MYFQDN=${MYFQDN,,} # convert to lower case
       MYHOSTNAME=${MYHOSTNAME,,} # convert to lower case
       
       logMsg "Generated hostname is $MYHOSTNAME"
       
       logMsg "Backing up $HOSTSFILE to $HOSTSBAK"
       cp -f $HOSTSFILE $HOSTSBAK
       RESULT=$?
       
       if [ "$RESULT" -ne 0 ]; then
          logMsg "Unable to make backup of $HOSTSFILE to $HOSTSBAK"
          RETVAL=1
       else
          grep -q "$MYHOSTNAME" $HOSTSFILE
          RESULT=$?
       
          if [ "$RESULT" -ne 0 ]; then
             logMsg "Hostname not present in $HOSTSFILE - adding new entry"
             echo $EXTERNALIP   $MYHOSTNAME   $MYFQDN >> $HOSTSFILE
          else
             logMsg "Hostname found in $HOSTSFILE - replacing"
             sed -i "/${MYHOSTNAME}/c ${EXTERNALIP}   ${MYHOSTNAME}  ${MYFQDN}" $HOSTSFILE
          fi
          
          logMsg "Backing up $RESOLVCONF to $RESOLVCONFBAK"
          cp -f $RESOLVCONF $RESOLVCONFBAK
          RESULT=$?

          if [ "$RESULT" -ne 0 ]; then
             logMsg "Unable to make backup of $RESOLVCONF to $RESOLVCONFBAK"
             RETVAL=1
          else
             grep -q "$DOMAINCOMPONENT" $RESOLVCONF
             RESULT=$?

             if [ "$RESULT" -ne 0 ]; then
                logMsg "Domain name not present in $RESOLVCONF - adding new entry"
                echo domain $DOMAINCOMPONENT >> $RESOLVCONF
             else
                logMsg "Domain name found in $RESOLVCONF - replacing"
                sed -i "/${DOMAINCOMPONENT}/c domain ${DOMAINCOMPONENT}" $RESOLVCONF
             fi
             
             # Now set the file so it cannot be over-written by the DHCP client
             logMsg "Protecting the $RESOLVCONF file from dhcpclient overwrite"
             /usr/bin/chattr +i $RESOLVCONF

             logMsg "Setting current hostname to $MYHOSTNAME"
             hostname $MYHOSTNAME
             RESULT=$?

             if [ "$RESULT" -ne 0 ]; then
                logMsg "Unable to set hostname to $MYHOSTNAME"
                RETVAL=1
             else
                logMsg "Backing up $NETWORK to $NETWORKBAK"
                cp -f $NETWORK $NETWORKBAK
                RESULT=$?

                if [ "$RESULT" -ne 0 ]; then
                   logMsg "Unable to make backup of $NETWORK to $NETWORKBAK"
                   RETVAL=1
                else
                   logMsg "Setting hostname in sysconfig to $MYHOSTNAME"
                   sed "s/HOSTNAME=.*/HOSTNAME=${MYHOSTNAME}/" -i $NETWORK
                   RESULT=$?
                   
                   if [ "$RESULT" -ne 0 ]; then
                      logMsg "Unable to set hostname to $MYHOSTNAME in $NETWORK"
                      RETVAL=1
                   fi
                fi
             fi
          fi
       fi
       exit $RETVAL
       
container_commands:    
  01_set_hostname:
    command: "/usr/local/PRODUCT-tools/set-hostname.sh ${DOMAIN_SUFFIX}"

  02_update_route53:
    command: "/usr/local/PRODUCT-tools/updateroute53 ${DOMAIN_SUFFIX}"
